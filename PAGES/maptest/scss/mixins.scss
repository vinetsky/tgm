@mixin for-media($props, $factor, $container) {
    @each $prop, $value in $props {
        @if meta.type-of($value) == number {
            #{$prop}: #{math.div(round(math.div($value, $factor) * 10), 10) * 1vw};
        } @else {
            #{$prop}: #{$value};
        }
    }
    @media (min-width: $container) {
        @each $prop, $value in $props {
            @if meta.type-of($value) == number {
                #{$prop}: #{$value}px;
            } @else {
                #{$prop}: #{$value};
            }
        }
    }
}

@mixin for-media-sm($props, $factor, $container) {
    @media (max-width: $container) {
        @each $prop, $value in $props {
            @if meta.type-of($value) == number {
                #{$prop}: #{math.div(round(math.div($value, $factor) * 10), 10) * 1vw};
            } @else {
                #{$prop}: #{$value};
            }
        }
    }
}

@mixin media($props) {
    @include for-media($props, $vw-factor, $container-width);
}

@mixin media-sm($props) {
    @include for-media-sm($props, $vw-factor-sm, $container-width-sm);
}

@mixin media-both($props) {
    @include for-media($props, $vw-factor, $container-width);
    @include for-media-sm($props, $vw-factor-sm, $container-width-sm);
}

@mixin button-properties() {
    background-color: var(--color-button-bg);
    color: var(--color-button-text);
    border: 1px solid var(--color-button-text);
    border-radius: 50%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: color 0.3s linear, background-color 0.3s linear;
    &:hover {
        background-color: var(--color-button-bg-hov);
        color: var(--color-button-text-hov);
    }
    &:focus {
        background-color: var(--color-button-bg-hov);
        color: var(--color-button-text-hov);
        box-shadow: 0 0 0 2px #fff;
        outline: 2px dotted black;
    }
}
